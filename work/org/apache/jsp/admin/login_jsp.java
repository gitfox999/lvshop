/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.64
 * Generated at: 2016-10-13 01:52:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.UUID;
import java.security.interfaces.RSAPublicKey;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.codec.binary.Base64;
import org.apache.shiro.web.filter.authc.FormAuthenticationFilter;
import org.springframework.context.ApplicationContext;
import net.shopxx.Setting;
import net.shopxx.util.SettingUtils;
import net.shopxx.util.SpringUtils;
import net.shopxx.Setting.CaptchaType;
import net.shopxx.Setting.AccountLockType;
import net.shopxx.service.RSAService;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tld/shiro.tld", Long.valueOf(1408538922533L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fauthenticated;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fshiro_005fauthenticated = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fshiro_005fauthenticated.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String base = request.getContextPath();
String captchaId = UUID.randomUUID().toString();
ApplicationContext applicationContext = SpringUtils.getApplicationContext();
Setting setting = SettingUtils.get();
if (applicationContext != null) {

      out.write('\r');
      out.write('\n');
      //  shiro:authenticated
      org.apache.shiro.web.tags.AuthenticatedTag _jspx_th_shiro_005fauthenticated_005f0 = (org.apache.shiro.web.tags.AuthenticatedTag) _005fjspx_005ftagPool_005fshiro_005fauthenticated.get(org.apache.shiro.web.tags.AuthenticatedTag.class);
      _jspx_th_shiro_005fauthenticated_005f0.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fauthenticated_005f0.setParent(null);
      int _jspx_eval_shiro_005fauthenticated_005f0 = _jspx_th_shiro_005fauthenticated_005f0.doStartTag();
      if (_jspx_eval_shiro_005fauthenticated_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\r');
          out.write('\n');

response.sendRedirect(base + "/admin/common/main.jhtml");

          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_shiro_005fauthenticated_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fauthenticated_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fshiro_005fauthenticated.reuse(_jspx_th_shiro_005fauthenticated_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fshiro_005fauthenticated.reuse(_jspx_th_shiro_005fauthenticated_005f0);
      out.write('\r');
      out.write('\n');

}

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\r\n");

if (applicationContext != null) {
	RSAService rsaService = SpringUtils.getBean("rsaServiceImpl", RSAService.class);
	RSAPublicKey publicKey = rsaService.generateKey(request);
	String modulus = Base64.encodeBase64String(publicKey.getModulus().toByteArray());
	String exponent = Base64.encodeBase64String(publicKey.getPublicExponent().toByteArray());
	
	String message = null;
	String loginFailure = (String) request.getAttribute(FormAuthenticationFilter.DEFAULT_ERROR_KEY_ATTRIBUTE_NAME);
	if (loginFailure != null) {
		if (loginFailure.equals("org.apache.shiro.authc.pam.UnsupportedTokenException")) {
			message = "admin.captcha.invalid";
		} else if (loginFailure.equals("org.apache.shiro.authc.UnknownAccountException")) {
			message = "admin.login.unknownAccount";
		} else if (loginFailure.equals("org.apache.shiro.authc.DisabledAccountException")) {
			message = "admin.login.disabledAccount";
		} else if (loginFailure.equals("org.apache.shiro.authc.LockedAccountException")) {
			message = "admin.login.lockedAccount";
		} else if (loginFailure.equals("org.apache.shiro.authc.IncorrectCredentialsException")) {
			if (ArrayUtils.contains(setting.getAccountLockTypes(), AccountLockType.admin)) {
				message = "admin.login.accountLockCount";
			} else {
				message = "admin.login.incorrectCredentials";
			}
		} else if (loginFailure.equals("org.apache.shiro.authc.AuthenticationException")) {
			message = "admin.login.authentication";
		}
	}

      out.write("\r\n");
      out.write("<title>");
      out.print(SpringUtils.getMessage("admin.login.title"));
      out.write("</title>\r\n");
      out.write("<meta http-equiv=\"expires\" content=\"0\" />\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.print(base);
      out.write("/resources/admin/css/common.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"");
      out.print(base);
      out.write("/resources/admin/css/login.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/jsbn.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/prng4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/rng.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/rsa.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/base64.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(base);
      out.write("/resources/admin/js/common.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$().ready( function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar $loginForm = $(\"#loginForm\");\r\n");
      out.write("\t\tvar $enPassword = $(\"#enPassword\");\r\n");
      out.write("\t\tvar $username = $(\"#username\");\r\n");
      out.write("\t\tvar $password = $(\"#password\");\r\n");
      out.write("\t\tvar $captcha = $(\"#captcha\");\r\n");
      out.write("\t\tvar $captchaImage = $(\"#captchaImage\");\r\n");
      out.write("\t\tvar $isRememberUsername = $(\"#isRememberUsername\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 记住用户名s\r\n");
      out.write("\t\tif(getCookie(\"adminUsername\") != null) {\r\n");
      out.write("\t\t\t$isRememberUsername.prop(\"checked\", true);\r\n");
      out.write("\t\t\t$username.val(getCookie(\"adminUsername\"));\r\n");
      out.write("\t\t\t$password.focus();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$isRememberUsername.prop(\"checked\", false);\r\n");
      out.write("\t\t\t$username.focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 更换验证码\r\n");
      out.write("\t\t$captchaImage.click( function() {\r\n");
      out.write("\t\t\t$captchaImage.attr(\"src\", \"");
      out.print(base);
      out.write("/admin/common/captcha.jhtml?captchaId=");
      out.print(captchaId);
      out.write("&timestamp=\" + (new Date()).valueOf());\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 表单验证、记住用户名\r\n");
      out.write("\t\t$loginForm.submit( function() {\r\n");
      out.write("\t\t\tif ($username.val() == \"\") {\r\n");
      out.write("\t\t\t\t$.message(\"warn\", \"");
      out.print(SpringUtils.getMessage("admin.login.usernameRequired"));
      out.write("\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif ($password.val() == \"\") {\r\n");
      out.write("\t\t\t\t$.message(\"warn\", \"");
      out.print(SpringUtils.getMessage("admin.login.passwordRequired"));
      out.write("\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif ($captcha.val() == \"\") {\r\n");
      out.write("\t\t\t\t$.message(\"warn\", \"");
      out.print(SpringUtils.getMessage("admin.login.captchaRequired"));
      out.write("\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif ($isRememberUsername.prop(\"checked\")) {\r\n");
      out.write("\t\t\t\taddCookie(\"adminUsername\", $username.val(), {expires: 7 * 24 * 60 * 60});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tremoveCookie(\"adminUsername\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar rsaKey = new RSAKey();\r\n");
      out.write("\t\t\trsaKey.setPublic(b64tohex(\"");
      out.print(modulus);
      out.write("\"), b64tohex(\"");
      out.print(exponent);
      out.write("\"));\r\n");
      out.write("\t\t\tvar enPassword = hex2b64(rsaKey.encrypt($password.val()));\r\n");
      out.write("\t\t\t$enPassword.val(enPassword);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
if (message != null) {
      out.write("\r\n");
      out.write("\t\t\t$.message(\"error\", \"");
      out.print(SpringUtils.getMessage(message, setting.getAccountLockCount()));
      out.write("\");\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
} else {
      out.write("\r\n");
      out.write("<title>提示信息</title>\r\n");
      out.write("<meta http-equiv=\"expires\" content=\"0\" />\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.print(base);
      out.write("/resources/admin/css/common.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"");
      out.print(base);
      out.write("/resources/admin/css/login.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
}
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
if (applicationContext != null) {
      out.write("\r\n");
      out.write("\t\t<div class=\"login\">\r\n");
      out.write("\t\t\t<form id=\"loginForm\" action=\"login.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"enPassword\" name=\"enPassword\" />\r\n");
      out.write("\t\t\t\t");
if (ArrayUtils.contains(setting.getCaptchaTypes(), CaptchaType.adminLogin)) {
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"captchaId\" value=\"");
      out.print(captchaId);
      out.write("\" />\r\n");
      out.write("\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"190\" rowspan=\"2\" align=\"center\" valign=\"bottom\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"");
      out.print(base);
      out.write("/resources/admin/images/login_logo.gif\"  />\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(SpringUtils.getMessage("admin.login.username"));
      out.write(":\r\n");
      out.write("\t\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" id=\"username\" name=\"username\" class=\"text\" maxlength=\"20\" />\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(SpringUtils.getMessage("admin.login.password"));
      out.write(":\r\n");
      out.write("\t\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" class=\"text\" maxlength=\"20\" autocomplete=\"off\" />\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
if (ArrayUtils.contains(setting.getCaptchaTypes(), CaptchaType.adminLogin)) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print(SpringUtils.getMessage("admin.captcha.name"));
      out.write(":\r\n");
      out.write("\t\t\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"captcha\" name=\"captcha\" class=\"text captcha\" maxlength=\"4\" autocomplete=\"off\" /><img id=\"captchaImage\" class=\"captchaImage\" src=\"");
      out.print(base);
      out.write("/admin/common/captcha.jhtml?captchaId=");
      out.print(captchaId);
      out.write("\" title=\"");
      out.print(SpringUtils.getMessage("admin.captcha.imageTitle"));
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"isRememberUsername\" value=\"true\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print(SpringUtils.getMessage("admin.login.rememberUsername"));
      out.write(":\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<th>\r\n");
      out.write("\t\t\t\t\t\t\t&nbsp;\r\n");
      out.write("\t\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" class=\"homeButton\" value=\"\" onclick=\"location.href='");
      out.print(base);
      out.write("/'\" /><input type=\"submit\" class=\"loginButton\" value=\"");
      out.print(SpringUtils.getMessage("admin.login.login"));
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<div class=\"powered\">COPYRIGHT © 2005-2013 ALL RIGHTS RESERVED.</div>\r\n");
      out.write("\t\t\t\t<div class=\"link\">\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(base);
      out.write('/');
      out.write('"');
      out.write('>');
      out.print(SpringUtils.getMessage("admin.login.home"));
      out.write("</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(base);
      out.write('/');
      out.write('"');
      out.write('>');
      out.print(SpringUtils.getMessage("admin.login.official"));
      out.write("</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(base);
      out.write('/');
      out.write('"');
      out.write('>');
      out.print(SpringUtils.getMessage("admin.login.bbs"));
      out.write("</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(base);
      out.write('/');
      out.write('"');
      out.write('>');
      out.print(SpringUtils.getMessage("admin.login.about"));
      out.write("</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(base);
      out.write('/');
      out.write('"');
      out.write('>');
      out.print(SpringUtils.getMessage("admin.login.contact"));
      out.write("</a> |\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(base);
      out.write('/');
      out.write('"');
      out.write('>');
      out.print(SpringUtils.getMessage("admin.login.license"));
      out.write("</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t");
} else {
      out.write("\r\n");
      out.write("\t\t<fieldset>\r\n");
      out.write("\t\t\t<legend>系统出现异常</legend>\r\n");
      out.write("\t\t\t<p>请检查程序是否已正确安装 [<a href=\"");
      out.print(base);
      out.write("/install/\">点击此处进行安装</a>]</p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>提示: 安装完成后必须重新启动WEB服务器</strong>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</fieldset>\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
